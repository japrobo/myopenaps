[device "curl"]
fields = 
cmd = bash
vendor = openaps.vendors.process
args = -c "curl -s https://dmtracker2.azurewebsites.net/api/v1/entries.json | json -e 'this.glucose = this.sgv'"

[report "last_four_pump_hours.json"]
device = pump
hours = 4.0
use = iter_pump_hours
reporter = JSON

[vendor "openapscontrib.timezones"]
path = .
module = openapscontrib.timezones

[device "ns-glucose"]
vendor = openaps.vendors.process
extra = ns-glucose.ini

[device "oref0"]
vendor = openaps.vendors.process
extra = oref0.ini

[device "iob"]
vendor = openaps.vendors.process
extra = iob.ini

[device "tz"]
vendor = openapscontrib.timezones
extra = tz.ini

[report "settings/model.json"]
device = pump
use = model
reporter = JSON

[report "monitor/clock.json"]
device = pump
use = read_clock
reporter = JSON

[report "monitor/clock-zoned.json"]
use = clock
reporter = JSON
astimezone = True
date = None
adjust = missing
input = monitor/clock.json
device = tz
timezone = EDT

[report "monitor/temp_basal.json"]
device = pump
use = read_temp_basal
reporter = JSON

[report "monitor/reservoir.json"]
device = pump
use = reservoir
reporter = JSON

[report "monitor/pumphistory.json"]
device = pump
hours = 4.0
use = iter_pump_hours
reporter = JSON

[report "monitor/pumphistory-zoned.json"]
use = rezone
reporter = JSON
astimezone = True
date = timestamp dateString start_at end_at created_at
adjust = missing
input = monitor/pumphistory.json
device = tz
timezone = EDT

[report "monitor/iob.json"]
profile = settings/profile.json
use = shell
clock = monitor/clock-zoned.json
reporter = text
json_default = True
pumphistory = monitor/pumphistory-zoned.json
device = iob
remainder = 

[report "settings/bg_targets.json"]
device = pump
use = read_bg_targets
reporter = JSON

[report "settings/insulin_sensitivities.json"]
device = pump
use = read_insulin_sensitivities
reporter = JSON

[report "settings/settings.json"]
device = pump
use = read_settings
reporter = JSON

[alias]
invoke = report invoke
preflight = ! bash -c "openaps wait-for-silence && rm -f monitor/clock.json && openaps report invoke monitor/clock.json >/dev/null 2>/dev/null && grep -q T monitor/clock.json && echo PREFLIGHT OK || ( mm-stick warmup || sudo oref0-reset-usb; echo PREFLIGHT FAIL; exit 1 )"
get-ns-glucose = report invoke monitor/ns-glucose.json
get-bg = ! bash -c "openaps monitor-cgm 2>/dev/null || ( openaps get-ns-glucose && grep -q glucose monitor/ns-glucose.json && mv monitor/ns-glucose.json monitor/glucose.json )"
wait-for-bg = ! bash -c "cp monitor/glucose.json monitor/last-glucose.json; while(diff -q monitor/last-glucose.json monitor/glucose.json); do echo -n .; sleep 10; openaps get-bg >/dev/null; done"
latest-ns-treatment-time = ! bash -c "nightscout latest-openaps-treatment $NIGHTSCOUT_HOST | json created_at"
format-latest-nightscout-treatments = ! bash -c "nightscout cull-latest-openaps-treatments monitor/pumphistory-zoned.json settings/model.json $(openaps latest-ns-treatment-time) > upload/latest-treatments.json"
upload-recent-treatments = ! bash -c "openaps format-latest-nightscout-treatments && test $(json -f upload/latest-treatments.json -a created_at eventType | wc -l ) -gt 0 && (ns-upload $NIGHTSCOUT_HOST $API_SECRET treatments.json upload/latest-treatments.json ) || echo \"No recent treatments to upload\""
upload = ! bash -c "openaps preflight && ( openaps monitor-pump && openaps upload-recent-treatments && openaps get-settings) 2>/dev/null >/dev/null && echo -n \"Uploaded; most recent treatment event @ \" && openaps latest-ns-treatment-time || echo \"Error; could not upload\""
status-upload = ! bash -c "openaps report invoke monitor/upload-status.json && ns-upload $NIGHTSCOUT_HOST $API_SECRET devicestatus.json monitor/upload-status.json"
enact = report invoke enact/enacted.json
monitor-pump = report invoke monitor/clock.json monitor/clock-zoned.json  monitor/temp_basal.json monitor/pumphistory.json monitor/pumphistory-zoned.json monitor/battery.json monitor/reservoir.json monitor/status.json settings/model.json monitor/meal.json
get-iob = report invoke monitor/iob.json
get-settings = report invoke settings/settings.json settings/bg_targets.json settings/insulin_sensitivities.json settings/basal_profile.json settings/profile.json settings/model.json
gather = ! bash -c "rm -f monitor/*; openaps get-settings && openaps get-bg && openaps monitor-pump && openaps report invoke monitor/iob.json"
monitor-cgm = report invoke monitor/glucose.json
get-suggested = ! bash -c "rm -f enact/*; openaps report invoke enact/suggested.json"
open-loop = ! bash -c  "openaps get-bg 2>/dev/null && ( openaps preflight && openaps gather && openaps get-suggested) || echo No CGM data."
loop = ! bash -c  "openaps get-bg 2>/dev/null && (openaps preflight && openaps gather && openaps get-suggested && openaps report invoke enact/enacted.json && openaps outputs && openaps report invoke monitor/pumphistory.json && openaps report invoke monitor/pumphistory-zoned.json && openaps status-upload && openaps upload-recent-treatments) || echo Loop Failed"
nightscout = ! bash -c "openaps latest-ns-treatment-time && openaps format-latest-nightscout-treatments && openaps upload-recent-treatments"
outputs = ! bash -c "cat enact/suggested.json | json && echo -------- && cat enact/enacted.json | json && openaps read-temp-basal && cat monitor/read-temp-basal.json | json"
read-temp-basal = report invoke monitor/read-temp-basal.json
watch = ! bash -c "tail -F /tmp/output"
watch-mail = ! bash -c "tail -F /var/mail/pi"
wait-for-silence = ! bash -c "echo -n \"Listening: \"; for i in `seq 1 40`; do echo -n .; ~/mmeowlink-source/bin/mmeowlink-any-pump-comms.py --port /dev/ttyACM0 --wait-for 20 2>/dev/null | egrep -v subg | egrep No && break; done"
mmtune = ! bash -c "echo -n \"mmtune: \" && openaps use pump mmtune "
watch-journal = ! bash -c "sudo journalctl -f"
wait-for-silence = ! bash -c "echo -n \"Listening: \"; for i in `seq 1 40`; do echo -n .; ~/mmeowlink-source/bin/mmeowlink-any-pump-comms.py --port /dev/ttyACM0 --wait-for 20 2>/dev/null | egrep -v subg | egrep No && break; done"
mmtune = ! bash -c "echo -n \"mmtune: \" && openaps use pump mmtune "

[device "get-profile"]
vendor = openaps.vendors.process
extra = get-profile.ini

[device "calculate-iob"]
vendor = openaps.vendors.process
extra = calculate-iob.ini

[device "determine-basal"]
vendor = openaps.vendors.process
extra = determine-basal.ini

[report "settings/profile.json"]
use = shell
bg_targets = settings/bg_targets.json
preferences = preferences.json
settings = settings//settings.json
basal_profile = settings/basal_profile.json
reporter = text
json_default = True
device = get-profile
remainder = 
insulin_sensitivities = settings/insulin_sensitivities.json

[report "monitor/upload-status.json"]
suggested = enact/suggested.json
status = monitor/status.json
use = shell
reservoir = monitor/reservoir.json
reporter = JSON
battery = monitor/battery.json
clock = monitor/clock-zoned.json
json_default = True
device = ns-status
remainder = 
iob = monitor/iob.json
enacted = enact/enacted.json

[report "monitor/battery.json"]
device = pump
use = read_battery_status
reporter = JSON

[report "monitor/status.json"]
device = pump
use = read_status
reporter = JSON

[report "monitor/ns-glucose.json"]
device = curl
remainder = 
use = shell
json_default = True
reporter = JSON

[device "ns-status"]
vendor = openaps.vendors.process
extra = ns-status.ini

[report "enact/resume-pump.json"]
device = pump
use = resume_pump
reporter = JSON

[report "enact/suspend-pump.json"]
device = pump
use = suspend_pump
reporter = JSON

[report "enact/enacted.json"]
device = pump
remainder = enact/suggested.json
use = set_temp_basal
json_default = True
reporter = JSON
input = enact/suggested.json

[report "settings/basal_profile.json"]
device = pump
use = read_basal_profile_std
reporter = JSON

[report "monitor/glucose.json"]
device = cgm
count = 100
use = iter_glucose
reporter = JSON

[device "ns"]
vendor = openaps.vendors.process
extra = ns.ini

[report "monitor/meal.json"]
device = oref0
remainder = meal monitor/pumphistory.json settings/profile.json monitor/clock.json
use = shell
json_default = True
reporter = JSON

[report "enact/suggested.json"]
profile = settings/profile.json
use = shell
temp_basal = monitor/temp_basal.json
reporter = text
json_default = True
device = determine-basal
remainder = monitor/meal.json
iob = monitor/iob.json
glucose = monitor/glucose.json

[report "monitor/read-temp-basal.json"]
device = pump
use = read_temp_basal
reporter = JSON

[report "nightscout/recent-missing-entries.json"]
oper = format-recent-type
use = shell
reporter = JSON
json_default = True
device = ns
remainder = tz entries monitor/glucose.json

[report "nightscout/uploaded-entries.json"]
oper = upload
use = shell
reporter = JSON
json_default = True
device = ns
remainder = entries.json nightscout/recent-missing-entries.json

[device "cgm"]
vendor = openaps.vendors.dexcom
extra = cgm.ini

[report "nightscout/recent-treatments.json"]
oper = format-recent-history-treatments
use = shell
reporter = JSON
json_default = True
device = ns
remainder = monitor/pump-history.json model.json

[report "nightscout/uploaded.json"]
oper = upload-non-empty-treatments
use = shell
reporter = JSON
json_default = True
device = ns
remainder = nightscout/recent-treatments.json

[device "meal"]
vendor = openaps.vendors.process
extra = meal.ini

[vendor "mmeowlink.vendors.mmeowlink"]
path = .
module = mmeowlink.vendors.mmeowlink

[device "pump"]
vendor = mmeowlink.vendors.mmeowlink
extra = pump.ini

